name: EC2에 Docker로 배포하는 워크플로우

on:
  push:
    branches:
      - main
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 가져오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 설정 파일 생성
        working-directory: saladMan
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties

      - name: Gradle Wrapper 실행권한 추가
        working-directory: saladMan
        run: chmod +x gradlew


      - name: Gradle 빌드
        working-directory: saladMan
        run: ./gradlew clean build -x test

      - name: ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Docker 이미지 빌드드
        working-directory: saladMan
        run: docker build -t saladman-server .

      - name: 현재 위치 확인
        working-directory: saladMan
        run: pwd && ls -la


      - name: Docker 태그 & 푸시
        run: |
          docker tag saladman-server ${{ steps.login-ecr.outputs.registry }}/saladman-server:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/saladman-server:latest

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        
      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://saladman-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name saladman-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=saladman-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz
